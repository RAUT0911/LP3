#include <iostream>
using namespace std;

int fibonacciRecursion(int n, int &steps) {
    steps++;
    if (n <= 1) return n;
    return fibonacciRecursion(n - 1, steps) + fibonacciRecursion(n - 2, steps);
}

int fibonacciIteration(int n, int &steps) {
    if (n <= 1) return n;

    int fib[n + 1];
    fib[0] = 0;
    fib[1] = 1;
    steps = 0;

    for (int i = 2; i <= n; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
        steps++;
    }
    return fib[n];
}

int main() {
    int n;
    cout << "Enter the number of Fibonacci numbers to calculate: ";
    cin >> n;

    int stepsRecursion = 0;
    int fibonacciRecResult = fibonacciRecursion(n, stepsRecursion);
    cout << "Fibonacci (Recursion) of " << n << ": " << fibonacciRecResult << endl;
    cout << "Fibonacci Recursion Steps: " << stepsRecursion << endl;

    int stepsIteration = 0;
    int fibonacciIterResult = fibonacciIteration(n, stepsIteration);
    cout << "Fibonacci (Iteration) of " << n << ": " << fibonacciIterResult << endl;
    cout << "Fibonacci Iteration Steps: " << stepsIteration << endl;

    return 0;
}
